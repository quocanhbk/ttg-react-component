[{"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\index.js":"1","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\App.js":"2","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\Dat.js":"3","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\Quanh.js":"4","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\Quan.js":"5","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\Container.js":"6","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\utils\\theme.js":"7","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\index.js":"8","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\CheckboxGroup.js":"9","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\Checkbox.js":"10","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\Code.js":"11","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\TableDatePicker.js":"12","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\Silder.js":"13","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\Box.js":"14","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\Button.js":"15","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\ButtonGroup.js":"16","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\RadioGroup.js":"17","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\ToggleGroup.js":"18","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\Radio.js":"19","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\Select.js":"20","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\Toggle.js":"21","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\utils\\color.js":"22","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\DropdownMenu.js":"23","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\Dropdown\\Select.js":"24","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\Dropdown\\Option.js":"25"},{"size":191,"mtime":1609927105790,"results":"26","hashOfConfig":"27"},{"size":335,"mtime":1609999418202,"results":"28","hashOfConfig":"27"},{"size":254,"mtime":1609994493194,"results":"29","hashOfConfig":"27"},{"size":4395,"mtime":1609990797313,"results":"30","hashOfConfig":"27"},{"size":2948,"mtime":1609990797312,"results":"31","hashOfConfig":"27"},{"size":773,"mtime":1609990797315,"results":"32","hashOfConfig":"27"},{"size":403,"mtime":1609927105791,"results":"33","hashOfConfig":"27"},{"size":427,"mtime":1609927105645,"results":"34","hashOfConfig":"27"},{"size":1797,"mtime":1609990797315,"results":"35","hashOfConfig":"27"},{"size":3175,"mtime":1609990797315,"results":"36","hashOfConfig":"27"},{"size":467,"mtime":1609927105637,"results":"37","hashOfConfig":"27"},{"size":1927,"mtime":1609927105640,"results":"38","hashOfConfig":"27"},{"size":3351,"mtime":1609927105639,"results":"39","hashOfConfig":"27"},{"size":931,"mtime":1609990797314,"results":"40","hashOfConfig":"27"},{"size":3280,"mtime":1609990797315,"results":"41","hashOfConfig":"27"},{"size":2462,"mtime":1609990797330,"results":"42","hashOfConfig":"27"},{"size":2001,"mtime":1609990797315,"results":"43","hashOfConfig":"27"},{"size":1861,"mtime":1609990797315,"results":"44","hashOfConfig":"27"},{"size":2573,"mtime":1609990797315,"results":"45","hashOfConfig":"27"},{"size":1236,"mtime":1609927105639,"results":"46","hashOfConfig":"27"},{"size":3876,"mtime":1609990797315,"results":"47","hashOfConfig":"27"},{"size":3273,"mtime":1609927105791,"results":"48","hashOfConfig":"27"},{"size":2341,"mtime":1609928742458,"results":"49","hashOfConfig":"27"},{"size":2609,"mtime":1609994745066,"results":"50","hashOfConfig":"27"},{"size":433,"mtime":1609994366106,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"8eg3lt",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\index.js",[],["111","112"],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\App.js",["113","114"],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\Dat.js",["115"],"import React from 'react'\r\nimport Select from './components/Dropdown/Select'\r\n\r\nconst data = [\r\n    {id: 1, name:\"One\"},\r\n    {id: 2, name:\"Two\"},\r\n    {id: 3, name:\"Three\"}\r\n]\r\nexport default function Dat() {\r\n    return (\r\n        <Select/>\r\n    )\r\n}\r\n","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\Quanh.js",["116","117","118"],"import {ThemeProvider} from 'styled-components'\r\nimport Container from './components/Container'\r\nimport {Button, ButtonGroup, Checkbox, CheckboxGroup, Radio, RadioGroup, Toggle, ToggleGroup} from './components/elements'\r\nimport theme from './utils/theme'\r\nimport {useState} from 'react'\r\nimport Box from './components/Box'\r\nimport Code from './components/Code'\r\n\r\nfunction Quanh() {\r\n  const [mode, setMode] = useState(\"edit\")\r\n  const [myTheme, setTheme] = useState(\"light\")\r\n  const [checkboxGroupValue, setCheckboxGroupValue] = useState([])\r\n  const [radioGroupValue, setRadioGroupValue] = useState(\"\")\r\n  const [checkboxValue, setCheckboxValue] = useState(false)\r\n  const [buttonGroupValue, setButtonGroupValue] = useState(\"\")\r\n  const [buttonValue, setButtonValue] = useState(\"\")\r\n  return (\r\n    <div>\r\n      <ThemeProvider theme={theme[myTheme] || theme.light}>\r\n        <Container title= {myTheme === \"light\" ? \"Light Theme\" : \"Dark Theme\"}>\r\n\r\n          <Container headline=\"Display Mode\" >\r\n            <ButtonGroup fullWidth onSelect={x => setMode(x)}>\r\n              <Button value=\"edit\" default >Edit</Button>\r\n              <Button value=\"view\">View</Button>\r\n              <Button value=\"disabled\">Disabled</Button>\r\n            </ButtonGroup>\r\n          </Container>\r\n\r\n          <Container headline=\"Theme\" >\r\n            <ButtonGroup fullWidth onSelect={x => setTheme(x)}>\r\n              <Button value=\"light\" default >Light</Button>\r\n              <Button value=\"dark\">Dark</Button>\r\n            </ButtonGroup>\r\n          </Container>\r\n\r\n          <br/>\r\n\r\n          <Container title={\"Elements\"} fullWidth>\r\n            <Box title=\"Checkbox Group\">\r\n              <CheckboxGroup displayMode={mode} onSelect={(value) => setCheckboxGroupValue(value)}>\r\n                <Checkbox value={1}>One</Checkbox>\r\n                <Checkbox value={2}>Two</Checkbox>\r\n              </CheckboxGroup>\r\n              <Code>{JSON.stringify(checkboxGroupValue)}</Code>\r\n            </Box>\r\n            <Box title=\"Checkbox\">\r\n              <Checkbox value={3} displayMode={mode} onSelect={(value) => setCheckboxValue(value)}>Awesome</Checkbox>\r\n              <Code>{JSON.stringify(checkboxValue)}</Code>\r\n            </Box>\r\n            <Box title=\"Radio Group\">\r\n              <RadioGroup displayMode={mode} onSelect={(value) => setRadioGroupValue(value)}>\r\n                <Radio value={1}>One</Radio>\r\n                <Radio value={2}>Two</Radio>\r\n                <Radio value={3}>Three</Radio>\r\n              </RadioGroup>\r\n              <Code>{JSON.stringify(radioGroupValue)}</Code>\r\n            </Box>\r\n            <Box title=\"Button Group\">\r\n              <ButtonGroup displayMode={mode} onSelect={(value) => setButtonGroupValue(value)}>\r\n                <Button value={1}>One</Button>\r\n                <Button value={2}>Two</Button>\r\n                <Button value={3}>Three</Button>\r\n              </ButtonGroup>\r\n              <Code>{JSON.stringify(buttonGroupValue)}</Code>\r\n            </Box>\r\n            <Box title=\"Button\" block>\r\n              <Button size=\"small\" displayMode={mode} demo onClick={() => setButtonValue(\"Clicked One\")}>Small</Button>\r\n              <Button size=\"medium\" displayMode={mode} demo onClick={() => setButtonValue(\"Clicked One\")}>Medium</Button>\r\n              <Button size=\"large\" displayMode={mode} demo onClick={() => setButtonValue(\"Clicked One\")}>Large</Button>\r\n              <Button size=\"small\" displayMode={mode} demo type=\"outline\" onClick={() => setButtonValue(\"Clicked Two\")}>Small</Button>\r\n              <Button size=\"medium\" displayMode={mode} demo type=\"outline\" onClick={() => setButtonValue(\"Clicked Three\")}>Medium</Button>\r\n              <Button size=\"large\" displayMode={mode} demo type=\"outline\" onClick={() => setButtonValue(\"Clicked Three\")}>Large</Button>\r\n              <Button size=\"small\" displayMode={mode} demo type=\"text\" onClick={() => setButtonValue(\"Clicked Two\")}>Small</Button>\r\n              <Button size=\"medium\" displayMode={mode} demo type=\"text\" onClick={() => setButtonValue(\"Clicked Three\")}>Medium</Button>\r\n              <Button size=\"large\" displayMode={mode} demo type=\"text\" onClick={() => setButtonValue(\"Clicked Three\")}>Large</Button>\r\n            </Box>\r\n            \r\n\r\n\r\n          </Container>\r\n        </Container>\r\n        \r\n      </ThemeProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Quanh;\r\n","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\Quan.js",["119","120"],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\Container.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\utils\\theme.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\index.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\CheckboxGroup.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\Checkbox.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\Code.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\TableDatePicker.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\Silder.js",["121"],"import React , {useState, useRef, useEffect} from 'react'\r\nimport styled from 'styled-components'\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nconst StyleSlider = styled.div`\r\n    position:relative;\r\n    margin-bottom:10px;\r\n    display:flex;\r\n    align-items:center;\r\n`;\r\n\r\nconst InputStyle = styled.input`\r\n\r\n    -webkit-appearance: none;\r\n    width: 90%;\r\n    height: 10px;\r\n    border-radius: 5px;\r\n    background: #d7dcdf;\r\n    outline: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    &::-webkit-slider-thumb {\r\n        appearance: none;\r\n        background: ${props => props.theme.fillColor};\r\n        width: 20px;\r\n        height: 20px;\r\n        border-radius: 50%;\r\n        cursor: pointer;\r\n        transition: background .15s ease-in-out;\r\n    }\r\n      \r\n    &::-moz-range-thumb {\r\n        width: 20px;\r\n        height: 20px;\r\n        border: 0;\r\n        border-radius: 50%;\r\n        cursor: pointer;\r\n        transition: background .15s ease-in-out;\r\n    }\r\n`;\r\n\r\nconst SliderValue= styled.span`\r\n    color  : ${props => props.theme.textColor};\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 60px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    border-radius: 3px;\r\n    padding: 5px 10px;\r\n    margin-left: 12px;\r\n    font-size: 1rem;\r\n`;\r\n\r\nconst linearGradientColor = '#4aa1f3';\r\nconst rangeBackgroundColor = '#d7dcdf';\r\nconst Slider = (props) =>{\r\n    const{\r\n        step,\r\n        min,\r\n        max,\r\n        value,\r\n        defaultLength,\r\n        onChangeValue,\r\n    } = props;\r\n\r\n    const rangeRef = useRef();\r\n    const [range,setRange]=useState(defaultLength);\r\n    const rangeLinearGradient = (value, min, max) => {\r\n        const percentage = calculatePercentage(value, min, max);\r\n        const newBackgroundStyle = `linear-gradient(90deg, ${linearGradientColor} 0% ${percentage}, ${rangeBackgroundColor} ${percentage} 100%)`;\r\n        rangeRef.current.style.background = newBackgroundStyle;\r\n    }\r\n    const handleChange = max => e => {\r\n        onChangeValue(e);\r\n        setRange(e.target.value);\r\n\r\n        rangeLinearGradient(e.target.value, min, max);\r\n    }\r\n\r\n    const calculatePercentage = (value, min, max) => {\r\n        return ((value - min) / (max - min)) * 100 + '%';\r\n    }\r\n    useEffect(() =>{\r\n        const rangeValue = parseInt(rangeRef.current.value,10);\r\n        rangeLinearGradient(rangeValue,min,max);\r\n    },[rangeRef,min,max]);\r\n\r\n    return(\r\n        <>\r\n            <StyleSlider className=\"slider-container\">\r\n                <InputStyle\r\n                ref={rangeRef}\r\n                className=\"range-slider\"\r\n                type=\"range\"\r\n                step={step}\r\n                min={min}\r\n                max={max}\r\n                value={value}\r\n                onChange={handleChange(max)}\r\n                />\r\n                <SliderValue className=\"range-slider-value\">{range}</SliderValue>           \r\n            </StyleSlider>\r\n        </>\r\n    )\r\n}\r\n\r\nSlider.prototype ={\r\n    step: PropTypes.number.isRequired,\r\n    min: PropTypes.number.isRequired,\r\n    max: PropTypes.number.isRequired,\r\n    defaultLength: PropTypes.number.isRequired,\r\n    sliderThumbColor: PropTypes.string.isRequired,\r\n    linearGradientColor: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    onChangeValue: PropTypes.func.isRequired,\r\n}\r\nexport default Slider","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\Box.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\Button.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\ButtonGroup.js",["122"],"import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components'\r\nimport Button from './Button';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst StyledButtonGroup = styled.div`\r\n    --fillColor: ${props => props.theme.fillColor};\r\n\r\n    margin: ${props => props.demo ? \"8px\": \"0px\"};\r\n    padding: 0px;\r\n    display: ${props => props.fullWidth ? \"flex\" : \"inline-flex\"};\r\n    align-items: flex-start;\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    background: var(--fillColor);\r\n    border: 2px solid ${props => props.displayMode === \"disabled\" ? \"#A3A3A3\" : \"var(--fillColor)\"};\r\n`;\r\n\r\nconst ButtonGroup = (props) => {\r\n    \r\n    const [value, setValue] = useState(\"\")\r\n    useEffect(() => {\r\n        let defElement = props.children.find(child => child.props.default)\r\n        if (defElement) {\r\n            setValue(defElement.props.value)\r\n            props.onSelect(defElement.props.value)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // Catching errors\r\n        props.children.forEach(child => {\r\n            if (child.type !== Button)\r\n                throw Error(\"Children of ButtonGroup must be Button\")\r\n            else if (child.props.value === undefined)\r\n                throw Error(\"Children must contain props 'value' \")\r\n        })\r\n        if (props.children.filter(child => child.props.default).length > 1)\r\n            throw Error(\"Cannot have more than one default value\")\r\n    }, [props])\r\n\r\n    const handleClick = (value) => {\r\n        setValue(value)\r\n        props.onSelect(value)\r\n    }\r\n\r\n    return (\r\n        <StyledButtonGroup {...props}>\r\n            {React.Children.map(props.children, (child, idx) => {\r\n                return React.cloneElement(\r\n                    child, \r\n                    {\r\n                        fullWidth: false, demo: false, displayMode: props.displayMode,\r\n                        ingroup: idx === 0 ? \"left\" : idx === props.children.length - 1 ? \"right\" : \"middle\", \r\n                        type: value === child.props.value ? \"contained\": \"outline\", \r\n                        onClick: () => handleClick(child.props.value)})\r\n            })}\r\n        </StyledButtonGroup>\r\n    )\r\n}\r\nButtonGroup.propTypes ={\r\n    className: PropTypes.string,\r\n    displayMode: PropTypes.string,\r\n    type: PropTypes.string\r\n}\r\nButtonGroup.defaultProps = {\r\n    onSelect: (x) => console.log(x),\r\n    defaultValue: \"\",\r\n    displayMode: \"edit\"\r\n}\r\nexport default ButtonGroup\r\n","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\RadioGroup.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\ToggleGroup.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\Radio.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\Select.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\Toggle.js",["123"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from 'styled-components'\r\nimport { useEffect } from \"react\"\r\nimport {useState} from \"react\"\r\nimport classNames from 'classnames';\r\n\r\nconst StyleDiv=styled.div`\r\n    display:flex;\r\n    padding: 4px 8px 4px 0;\r\n    align-items:center;\r\n`;\r\nconst LabelToggle = styled.label`\r\n    position: relative;\r\n    display:flex;\r\n    width: 40px;\r\n    height: 20px;\r\n    pointer-events: ${props => props.displayMode !== \"edit\" ? \"none\" : \"auto\"};\r\n\r\n`;\r\nconst StyleInput = styled.input`\r\n    border: 0;\r\n    height: 0;\r\n    width:0;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    margin:0;\r\n    &:checked + .toggle-switch{\r\n        background-color: #2196F3;\r\n    }\r\n    &:focus + .toggle-switch{\r\n        box-shadow: 0 0 1px #2196F3;\r\n    }\r\n    &:checked + .toggle-switch:before{\r\n        -webkit-transform: translateX(18px);\r\n        -ms-transform: translateX(18px);\r\n        transform: translateX(18px);\r\n    }\r\n    &:checked ~ .toggle-switch{\r\n        transition: 0.4s;\r\n        background:${props => props.theme.fillColor};\r\n    }\r\n`;\r\nconst StyleSpan = styled.span`\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #ccc;\r\n    -webkit-transition: .4s;\r\n    transition: .4s;\r\n    border-radius:34px;\r\n    &:before{\r\n        position: absolute;\r\n        content: \"\";\r\n        height: 16px;\r\n        width: 16px;\r\n        left: 3px;\r\n        border-radius:50%;\r\n        bottom: 2px;\r\n        background-color: white;\r\n        -webkit-transition: .4s;\r\n        transition: .4s;\r\n    }\r\n`;\r\nconst StyleName= styled.span`\r\n    font-size:1rem;\r\n    display:block;\r\n    margin: 0 5px;\r\n    color: ${props => props.displayMode === \"disabled\" ? \"#A3A3A3\": props.theme.textColor};\r\n\r\n`;\r\nconst Toggle = (props) => {\r\n    const [toggle,setToggle] = useState(false); //kiem tra khi check vao toggle\r\n    const [checked, setChecked] = useState(props.default)\r\n    const {defaultChecked,onChange,disabled,className} = props;\r\n    const triggerToogle = ()=>{\r\n        if(disabled) {return;}\r\n        setToggle(!toggle);\r\n        if(typeof onChange ==='function'){\r\n            onChange(!toggle);\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        if(defaultChecked){\r\n            setToggle(defaultChecked);\r\n        }\r\n    },[defaultChecked]);\r\n    const toggleClasses = classNames('toggle', {\r\n        'toggle--checked': toggle,\r\n        'toggle--disabled': disabled\r\n    }, className);\r\n    \r\n    const handleSelect = (e) => {\r\n        setChecked(e.target.checked)\r\n        props.onSelect(e.target.value, e.target.checked)\r\n    }\r\n\r\n    return(\r\n        <StyleDiv {...props}>     \r\n            <StyleName displayMode={props.disabled ? \"disabled\" : props.displayMode}>{props.children}</StyleName>\r\n            <LabelToggle displayMode={props.disabled ? \"disabled\" : props.displayMode} onChange={triggerToogle} className={toggleClasses}>\r\n                <StyleInput  displayMode={props.disabled ? \"disabled\" : props.displayMode} \r\n                type=\"checkbox\"\r\n                name={props.name} \r\n                value={props.value} \r\n                onChange={handleSelect} \r\n                defaultChecked={props.default}\r\n                />\r\n                <StyleSpan className=\"toggle-switch\"/>\r\n            </LabelToggle>\r\n        </StyleDiv>\r\n\r\n    )\r\n}\r\nToggle.propTypes = {\r\n    disable:PropTypes.bool,\r\n    defaultChecked:PropTypes.bool,\r\n    className: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    icons: PropTypes.oneOfType([\r\n        PropTypes.bool,\r\n        PropTypes.shape({\r\n            checked: PropTypes.node,\r\n            unchecked: PropTypes.node\r\n        })\r\n    ])\r\n}\r\nToggle.defaultProps = {\r\n    onSelect: (x,y) => console.log(x,y),\r\n    default: false,\r\n    displayMode: \"edit\"\r\n}\r\n\r\nexport default Toggle;\r\n","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\utils\\color.js",[],["124","125"],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\DropdownMenu.js",["126","127","128","129"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst StyledUl = styled.ul`\r\n    list-style-type: none;\r\n    margin: 0;\r\n    overflow: hidden;\r\n    background-color: #333;\r\n    padding: 0px;\r\n    background-color: ${props => props.color ? \"#CCC\" : \"lightblue\"};\r\n    color: black;\r\n    font-weight: bold;\r\n    margin-top:5px;\r\n`;\r\n\r\nconst StyledLi = styled.li`\r\n    float: left;\r\n    height: 100%;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: red;\r\n    }\r\n`;\r\n\r\nconst DropDownContent = styled.div`\r\n    display: none;\r\n    position: absolute;\r\n    min-width: 100px;\r\n    z-index: 1;\r\n    margin-top:2px;\r\n`;\r\n\r\nconst DropDownLi = styled(StyledLi)`\r\n    display: inline-block;\r\n    &:hover ${DropDownContent} {\r\n        display: block\r\n    }\r\n`;\r\n\r\nconst StyledA = styled.a`\r\n    display: inline-block;\r\n    text-align: center;\r\n    text-decoration: none;\r\n`;\r\n\r\nconst SubA = styled(StyledA)`\r\n    text-decoration: none;\r\n    display: block;\r\n    text-align: left;\r\n    background-color: white;\r\n    padding: 10px;\r\n    margin-left:-10px;\r\n    &:hover{\r\n        background-color: rgba(165, 156, 135, 1 );\r\n    }\r\n`;\r\n\r\n\r\nconst DropdownMenu = (props) => {\r\n    const [is_dropdown, setIsDropdown] = useState(false); // kiểm tra ng dùng đã chọn hay chưa\r\n    const [valuedropwdown, setvalueDropdown] = useState(); //lấy value ng dùng chọn\r\n\r\n    // thay đổi giá trị khi người dùng chọn\r\n    const handleClick = (props) =>{\r\n        // setvalueDropdown(props);\r\n        // setIsDropdown(true);\r\n        console.log(props)\r\n    }\r\n    return (\r\n        <StyledUl color = {props.color}>\r\n            <DropDownLi>\r\n                <StyledA >\r\n                    { props.value }\r\n                </StyledA>\r\n                <DropDownContent>\r\n                    {\r\n                        props.data.map((item, index)=>{\r\n                            return(\r\n                                <SubA key={index} onClick={()=>handleClick(item.name)}>\r\n                                    {item.name}\r\n                                </SubA>\r\n                            )\r\n                        })\r\n                    }\r\n                </DropDownContent>\r\n            </DropDownLi>\r\n        </StyledUl>\r\n    );\r\n}\r\n\r\nexport default DropdownMenu;",["130","131"],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\Dropdown\\Select.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\Dropdown\\Option.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":11},{"ruleId":"136","severity":1,"message":"140","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":13},{"ruleId":"136","severity":1,"message":"141","line":4,"column":7,"nodeType":"138","messageId":"139","endLine":4,"endColumn":11},{"ruleId":"136","severity":1,"message":"142","line":3,"column":74,"nodeType":"138","messageId":"139","endLine":3,"endColumn":80},{"ruleId":"136","severity":1,"message":"143","line":3,"column":82,"nodeType":"138","messageId":"139","endLine":3,"endColumn":93},{"ruleId":"136","severity":1,"message":"144","line":16,"column":10,"nodeType":"138","messageId":"139","endLine":16,"endColumn":21},{"ruleId":"136","severity":1,"message":"145","line":17,"column":10,"nodeType":"138","messageId":"139","endLine":17,"endColumn":28},{"ruleId":"136","severity":1,"message":"146","line":17,"column":30,"nodeType":"138","messageId":"139","endLine":17,"endColumn":51},{"ruleId":"147","severity":1,"message":"148","line":87,"column":7,"nodeType":"149","endLine":87,"endColumn":25,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"151","line":28,"column":8,"nodeType":"149","endLine":28,"endColumn":10,"suggestions":"152"},{"ruleId":"136","severity":1,"message":"153","line":77,"column":12,"nodeType":"138","messageId":"139","endLine":77,"endColumn":19},{"ruleId":"132","replacedBy":"154"},{"ruleId":"134","replacedBy":"155"},{"ruleId":"136","severity":1,"message":"156","line":62,"column":12,"nodeType":"138","messageId":"139","endLine":62,"endColumn":23},{"ruleId":"136","severity":1,"message":"157","line":62,"column":25,"nodeType":"138","messageId":"139","endLine":62,"endColumn":38},{"ruleId":"136","severity":1,"message":"158","line":63,"column":12,"nodeType":"138","messageId":"139","endLine":63,"endColumn":26},{"ruleId":"136","severity":1,"message":"159","line":63,"column":28,"nodeType":"138","messageId":"139","endLine":63,"endColumn":44},{"ruleId":"132","replacedBy":"160"},{"ruleId":"134","replacedBy":"161"},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'Dat' is defined but never used.","Identifier","unusedVar","'Quanh' is defined but never used.","'data' is assigned a value but never used.","'Toggle' is defined but never used.","'ToggleGroup' is defined but never used.","'buttonValue' is assigned a value but never used.","'checkboxGroupValue' is assigned a value but never used.","'setCheckboxGroupValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rangeLinearGradient'. Either include it or remove the dependency array.","ArrayExpression",["164"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["165"],"'checked' is assigned a value but never used.",["162"],["163"],"'is_dropdown' is assigned a value but never used.","'setIsDropdown' is assigned a value but never used.","'valuedropwdown' is assigned a value but never used.","'setvalueDropdown' is assigned a value but never used.",["162"],["163"],"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [rangeRef, min, max, rangeLinearGradient]",{"range":"170","text":"171"},"Update the dependencies array to be: [props]",{"range":"172","text":"173"},[2379,2397],"[rangeRef, min, max, rangeLinearGradient]",[940,942],"[props]"]