[{"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\index.js":"1","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\App.js":"2","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\utils\\theme.js":"3","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\Container.js":"4","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\index.js":"5","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\ButtonGroup.js":"6","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\RadioGroup.js":"7","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\CheckboxGroup.js":"8","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\Select.js":"9","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\Button.js":"10","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\Radio.js":"11","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\Checkbox.js":"12","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\utils\\color.js":"13"},{"size":191,"mtime":1609904662249,"results":"14","hashOfConfig":"15"},{"size":667,"mtime":1609919710918,"results":"16","hashOfConfig":"15"},{"size":403,"mtime":1609904662250,"results":"17","hashOfConfig":"15"},{"size":705,"mtime":1609915684081,"results":"18","hashOfConfig":"15"},{"size":331,"mtime":1609904662117,"results":"19","hashOfConfig":"15"},{"size":2017,"mtime":1609919535580,"results":"20","hashOfConfig":"15"},{"size":1831,"mtime":1609913643250,"results":"21","hashOfConfig":"15"},{"size":1628,"mtime":1609913643249,"results":"22","hashOfConfig":"15"},{"size":1220,"mtime":1609904662117,"results":"23","hashOfConfig":"15"},{"size":2787,"mtime":1609919501316,"results":"24","hashOfConfig":"15"},{"size":2064,"mtime":1609915684084,"results":"25","hashOfConfig":"15"},{"size":2819,"mtime":1609915684083,"results":"26","hashOfConfig":"15"},{"size":3273,"mtime":1609904662249,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"8eg3lt",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\index.js",[],["56","57"],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\App.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\utils\\theme.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\Container.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\index.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\ButtonGroup.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\RadioGroup.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\CheckboxGroup.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\Select.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\Button.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\Radio.js",[],"C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\components\\elements\\Checkbox.js",["58"],"import styled from 'styled-components'\r\nimport {getFader} from '../../utils/color'\r\nimport {useState, useEffect} from 'react'\r\nconst LabelCheckbox = styled.label`\r\n    display: inline-block;\r\n    position: relative;\r\n    padding: 4px 8px 4px 1.5rem;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    pointer-events: ${props => props.displayMode !== \"edit\" ? \"none\" : \"auto\"};\r\n\r\n`;\r\n\r\nconst InputChkbox = styled.input`\r\n    display: none;\r\n    \r\n    &:checked ~ span:after {\r\n        border-color: ${props => props.displayMode === \"disabled\" ? \"#A3A3A3\" : props.theme.fillColor};\r\n    }\r\n    &:checked ~ span {\r\n        border-color: ${props => props.displayMode === \"disabled\" ? \"#C#C#C#\" : props.theme.fillColor};\r\n    }\r\n`;\r\n\r\nconst SpanChkBox = styled.span`\r\n    display:block;  \r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    left: 0rem;\r\n    height:1.2rem;\r\n    width: 1.2rem;\r\n    background-color: transparent;\r\n    border-radius: 4px;\r\n    border:2px solid ${props => props.displayMode === \"disabled\" ? \"#C3C3C3\" : getFader(props.theme.fillColor, 0.3)};\r\n\r\n    &:after{\r\n        transition: border-color 0.15s linear;\r\n        content: \"\";\r\n        position: absolute;\r\n        left: 4.5px;\r\n        top: 1px;\r\n        width: 4px;\r\n        height: 8px;\r\n        border-style: solid;\r\n        border-color: transparent;\r\n        border-width: 0 3px 3px 0;\r\n        transform: rotate(45deg);\r\n    }\r\n    &:hover{\r\n        box-shadow: 0px 0px 16px ${props => getFader(props.theme.fillColor, 0.8)};\r\n    }\r\n`;\r\n\r\nconst SpanChkName= styled.span`\r\n    display:block;\r\n    font-size:1rem;\r\n    color: ${props => props.displayMode === \"disabled\" ? \"#A3A3A3\": props.theme.textColor};\r\n\r\n`;\r\n\r\n\r\nconst Checkbox = (props) => {\r\n    const [mount, setMount] = useState(false)\r\n    const [checked, setChecked] = useState(props.default)\r\n\r\n    useEffect(() => {\r\n        if (!mount) {\r\n            props.onSelect(checked)\r\n            setMount(true)\r\n        }\r\n    },[])\r\n\r\n    const handleSelect = (e) => {\r\n        setChecked(e.target.checked)\r\n        props.onSelect(e.target.checked)\r\n    }\r\n\r\n    return(\r\n        <LabelCheckbox {...props} displayMode={props.disabled ? \"disabled\" : props.displayMode}>\r\n            <InputChkbox displayMode={props.disabled ? \"disabled\" : props.displayMode} type=\"checkbox\" name={props.name} value={props.value} onChange={handleSelect} defaultChecked={props.default}/>\r\n            <SpanChkBox displayMode={props.disabled ? \"disabled\" : props.displayMode}/>\r\n            <SpanChkName displayMode={props.disabled ? \"disabled\" : props.displayMode}>{props.children}</SpanChkName>\r\n        </LabelCheckbox>\r\n    )\r\n}\r\n\r\nCheckbox.defaultProps = {\r\n    onSelect: (x) => console.log(x),\r\n    default: false,\r\n    displayMode: \"edit\"\r\n}\r\nexport default Checkbox","C:\\React\\Công ty\\Front-end\\ttg-react-component\\src\\utils\\color.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":72,"column":7,"nodeType":"65","endLine":72,"endColumn":9,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checked', 'mount', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [checked, mount, props]",{"range":"72","text":"73"},[1995,1997],"[checked, mount, props]"]