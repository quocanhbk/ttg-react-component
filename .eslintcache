[{"C:\\Dev\\High Noon\\client\\src\\index.js":"1","C:\\Dev\\High Noon\\client\\src\\App.js":"2","C:\\Dev\\High Noon\\client\\src\\components\\Container.js":"3","C:\\Dev\\High Noon\\client\\src\\components\\ToggleGroup.js":"4","C:\\Dev\\High Noon\\client\\src\\components\\ToggleSwitch.js":"5","C:\\Dev\\High Noon\\client\\src\\components\\Tabs.js":"6","C:\\Dev\\High Noon\\client\\src\\components\\TextInput.js":"7","C:\\Dev\\High Noon\\client\\src\\utils\\theme.js":"8","C:\\Dev\\High Noon\\client\\src\\components\\TabPane.js":"9","C:\\Dev\\High Noon\\client\\src\\components\\elements\\index.js":"10","C:\\Dev\\High Noon\\client\\src\\utils\\color.js":"11","C:\\Dev\\High Noon\\client\\src\\components\\elements\\Radio.js":"12","C:\\Dev\\High Noon\\client\\src\\components\\elements\\Button.js":"13","C:\\Dev\\High Noon\\client\\src\\components\\elements\\ButtonGroup.js":"14","C:\\Dev\\High Noon\\client\\src\\components\\elements\\Select.js":"15","C:\\Dev\\High Noon\\client\\src\\components\\elements\\RadioGroup.js":"16","C:\\Dev\\High Noon\\client\\src\\components\\elements\\CheckboxGroup.js":"17","C:\\Dev\\High Noon\\client\\src\\components\\elements\\Checkbox.js":"18","C:\\Dev\\High Noon\\client\\src\\components\\elements\\NewButtonGroup.js":"19","C:\\Dev\\High Noon\\client\\src\\components\\TableDatePicker.js":"20","C:\\Dev\\High Noon\\client\\src\\Quanh.js":"21","C:\\Dev\\High Noon\\client\\src\\components\\icons\\IcoCheck.js":"22","C:\\Dev\\High Noon\\client\\src\\components\\icons\\IcoCheckCircle.js":"23","C:\\Dev\\High Noon\\client\\src\\components\\icons\\IcoCheckSquare.js":"24","C:\\Dev\\High Noon\\client\\src\\components\\Box.js":"25","C:\\Dev\\High Noon\\client\\src\\components\\Code.js":"26","C:\\Dev\\High Noon\\client\\src\\Dat.js":"27","C:\\Dev\\High Noon\\client\\src\\components\\icons\\IcoChevronDown.js":"28","C:\\Dev\\High Noon\\client\\src\\components\\elements\\Option.js":"29"},{"size":191,"mtime":1609225355861,"results":"30","hashOfConfig":"31"},{"size":416,"mtime":1609925267598,"results":"32","hashOfConfig":"31"},{"size":740,"mtime":1609919251645,"results":"33","hashOfConfig":"31"},{"size":1493,"mtime":1609832869461,"results":"34","hashOfConfig":"31"},{"size":3051,"mtime":1609832869521,"results":"35","hashOfConfig":"31"},{"size":2677,"mtime":1609832869456,"results":"36","hashOfConfig":"31"},{"size":1619,"mtime":1609832869459,"results":"37","hashOfConfig":"31"},{"size":403,"mtime":1609855330889,"results":"38","hashOfConfig":"31"},{"size":383,"mtime":1609832869453,"results":"39","hashOfConfig":"31"},{"size":333,"mtime":1609917231041,"results":"40","hashOfConfig":"31"},{"size":3273,"mtime":1609855053540,"results":"41","hashOfConfig":"31"},{"size":2342,"mtime":1609917853107,"results":"42","hashOfConfig":"31"},{"size":3118,"mtime":1609925417521,"results":"43","hashOfConfig":"31"},{"size":2297,"mtime":1609925227490,"results":"44","hashOfConfig":"31"},{"size":1220,"mtime":1609924611157,"results":"45","hashOfConfig":"31"},{"size":1832,"mtime":1609917347945,"results":"46","hashOfConfig":"31"},{"size":1628,"mtime":1609906714185,"results":"47","hashOfConfig":"31"},{"size":3029,"mtime":1609925458818,"results":"48","hashOfConfig":"31"},{"size":2483,"mtime":1609859682286,"results":"49","hashOfConfig":"31"},{"size":1927,"mtime":1609919967702,"results":"50","hashOfConfig":"31"},{"size":3883,"mtime":1609924611155,"results":"51","hashOfConfig":"31"},{"size":859,"mtime":1609139482524,"results":"52","hashOfConfig":"31"},{"size":943,"mtime":1609139482522,"results":"53","hashOfConfig":"31"},{"size":960,"mtime":1609139482523,"results":"54","hashOfConfig":"31"},{"size":825,"mtime":1609918934825,"results":"55","hashOfConfig":"31"},{"size":467,"mtime":1609918835214,"results":"56","hashOfConfig":"31"},{"size":448,"mtime":1609925227471,"results":"57","hashOfConfig":"31"},{"size":884,"mtime":1609139482524,"results":"58","hashOfConfig":"31"},{"size":267,"mtime":1609924707790,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"m2ei5n",{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"102"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dev\\High Noon\\client\\src\\index.js",[],["125","126"],"C:\\Dev\\High Noon\\client\\src\\App.js",["127","128","129","130"],"C:\\Dev\\High Noon\\client\\src\\components\\Container.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\ToggleGroup.js",[],["131","132"],"C:\\Dev\\High Noon\\client\\src\\components\\ToggleSwitch.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\Tabs.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\TextInput.js",[],"C:\\Dev\\High Noon\\client\\src\\utils\\theme.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\TabPane.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\elements\\index.js",[],"C:\\Dev\\High Noon\\client\\src\\utils\\color.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\elements\\Radio.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\elements\\Button.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\elements\\ButtonGroup.js",["133"],"import React, {useState, useEffect} from 'react'\r\nimport styled from 'styled-components'\r\nimport Button from './Button';\r\n\r\nconst StyledButtonGroup = styled.div`\r\n    --fillColor: ${props => props.theme.fillColor};\r\n\r\n    margin: ${props => props.demo ? \"8px\": \"0px\"};\r\n    padding: 0px;\r\n    display: ${props => props.fullWidth ? \"flex\" : \"inline-flex\"};\r\n    align-items: flex-start;\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    background: var(--fillColor);\r\n    border: 2px solid ${props => props.displayMode === \"disabled\" ? \"#A3A3A3\" : \"var(--fillColor)\"};\r\n`;\r\n\r\nconst ButtonGroup = (props) => {\r\n\r\n    const [value, setValue] = useState(\"\")\r\n    useEffect(() => {\r\n        let defElement = props.children.find(child => child.props.default)\r\n        if (defElement) {\r\n            setValue(defElement.props.value)\r\n            props.onSelect(defElement.props.value)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // Catching errors\r\n        props.children.forEach(child => {\r\n            if (child.type !== Button)\r\n                throw Error(\"Children of ButtonGroup must be Button\")\r\n            else if (child.props.value === undefined)\r\n                throw Error(\"Children must contain props 'value' \")\r\n        })\r\n        if (props.children.filter(child => child.props.default).length > 1)\r\n            throw Error(\"Cannot have more than one default value\")\r\n    }, [props])\r\n\r\n    const handleClick = (value) => {\r\n        setValue(value)\r\n        props.onSelect(value)\r\n    }\r\n\r\n    return (\r\n        <StyledButtonGroup {...props}>\r\n            {React.Children.map(props.children, (child, idx) => {\r\n                return React.cloneElement(\r\n                    child, \r\n                    {\r\n                        fullWidth: false, demo: false, displayMode: props.displayMode,\r\n                        ingroup: idx === 0 ? \"left\" : idx === props.children.length - 1 ? \"right\" : \"middle\", \r\n                        type: value === child.props.value ? \"contained\": \"outline\", \r\n                        onClick: () => handleClick(child.props.value)})\r\n            })}\r\n        </StyledButtonGroup>\r\n    )\r\n}\r\n\r\nButtonGroup.defaultProps = {\r\n    onSelect: (x) => console.log(x),\r\n    defaultValue: \"\",\r\n    displayMode: \"edit\"\r\n}\r\nexport default ButtonGroup\r\n","C:\\Dev\\High Noon\\client\\src\\components\\elements\\Select.js",["134","135","136"],"import React, {useEffect, useRef, useState} from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledComboBox = styled.div`\r\n    background-color: yellow;\r\n    padding: 8px;\r\n    border: 1px solid black;\r\n`;\r\n\r\nfunction useOutside(ref, func = () => console.log(\"Clicked Outside\")) {\r\n    useEffect(() => {\r\n        const handleClickOutside = (e) => {\r\n            if (ref.current && !ref.current.contains(e.target)) {\r\n                func()\r\n            }\r\n        }\r\n        document.addEventListener(\"mousedown\", handleClickOutside)\r\n\r\n        //the function in return will execute when component is unmount (remove)\r\n        return () => {\r\n            console.log(\"Cleaning up\")\r\n            document.removeEventListener(\"mousedown\", handleClickOutside)\r\n        }\r\n    })\r\n}\r\n\r\nconst Select = () => {\r\n    const [state, setState] = useState(true)\r\n    const wrapper = useRef(null)\r\n    useOutside(wrapper)\r\n    return (\r\n        <div>\r\n        <button onClick={() => setState(false)}>Remove combobox</button>\r\n        {state && <StyledComboBox onClick={() => console.log(\"Click inside\")} ref={wrapper}>\r\n            Combobox\r\n        </StyledComboBox>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select","C:\\Dev\\High Noon\\client\\src\\components\\elements\\RadioGroup.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\elements\\CheckboxGroup.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\elements\\Checkbox.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\elements\\NewButtonGroup.js",[],["137","138"],"C:\\Dev\\High Noon\\client\\src\\components\\TableDatePicker.js",["139"],"import DatePicker from \"react-datepicker\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport {useState} from \"react\"\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst StyleTable = styled.div`\r\n    position:relative;\r\n    & .react-datepicker__day-name{\r\n        color: ${props => props.theme.backgroundColor};\r\n    }\r\n    & .react-datepicker__current-month{\r\n        color: ${props => props.theme.backgroundColor};\r\n    }\r\n    & .react-datepicker__day--selected , .react-datepicker__day--keyboard-selected{\r\n        background: ${props => props.theme.fillColor};\r\n        color:  ${props => props.theme.backgroundColor};       \r\n    }\r\n    & .react-datepicker-popper{\r\n        transform:none!important;\r\n    }\r\n    & .react-datepicker__tab-loop{\r\n        position:relative;\r\n    }\r\n    & .react-datepicker__header{\r\n        background:${props => props.theme.fillColor};\r\n    }\r\n    & .react-datepicker__close-icon::after{\r\n        background:${props => props.theme.fillColor};\r\n    }\r\n`;\r\n\r\n\r\nconst  TableDatePicker = (props) => {\r\n    const [startDate, setStartDate] = useState(new Date());\r\n   \r\n    return (\r\n        <StyleTable {...props}>\r\n      <DatePicker selected={startDate}\r\n       dateFormat=\"dd/MM/yyyy\"\r\n        onChange={date => props.onSelect(date)}\r\n        isClearable\r\n        placeholderText=\"Select date\"\r\n        >\r\n      <div style={{ color: \"red\" }}>{props.children}</div>\r\n    </DatePicker>\r\n      </StyleTable>\r\n    );\r\n   }\r\nTableDatePicker.defaultProps = {\r\n    onSelect: (x) => console.log(x)\r\n}\r\nexport default TableDatePicker","C:\\Dev\\High Noon\\client\\src\\Quanh.js",["140","141","142","143"],"import {ThemeProvider} from 'styled-components'\r\nimport Container from './components/Container'\r\nimport {Button, ButtonGroup, Checkbox, CheckboxGroup, Radio, RadioGroup} from './components/elements'\r\nimport theme from './utils/theme'\r\nimport {useState} from 'react'\r\nimport Box from './components/Box'\r\nimport Code from './components/Code'\r\n\r\nfunction Quanh() {\r\n  const [mode, setMode] = useState(\"edit\")\r\n  const [myTheme, setTheme] = useState(\"light\")\r\n  const [checkboxGroupValue, setCheckboxGroupValue] = useState([])\r\n  const [radioGroupValue, setRadioGroupValue] = useState(\"\")\r\n  const [checkboxValue, setCheckboxValue] = useState(false)\r\n  const [buttonGroupValue, setButtonGroupValue] = useState(\"\")\r\n  const [buttonValue, setButtonValue] = useState(\"\")\r\n  return (\r\n    <div>\r\n      <ThemeProvider theme={theme[myTheme] || theme.light}>\r\n        <Container title= {myTheme === \"light\" ? \"Light Theme\" : \"Dark Theme\"}>\r\n\r\n          <Container headline=\"Display Mode\" >\r\n            <ButtonGroup fullWidth onSelect={x => setMode(x)}>\r\n              <Button value=\"edit\" default >Edit</Button>\r\n              <Button value=\"view\">View</Button>\r\n              <Button value=\"disabled\">Disabled</Button>\r\n            </ButtonGroup>\r\n          </Container>\r\n\r\n          <Container headline=\"Theme\" >\r\n            <ButtonGroup fullWidth onSelect={x => setTheme(x)}>\r\n              <Button value=\"light\" default >Light</Button>\r\n              <Button value=\"dark\">Dark</Button>\r\n            </ButtonGroup>\r\n          </Container>\r\n\r\n          <hr/>\r\n\r\n          <Container title={\"Elements\"} fullWidth>\r\n            <Box title=\"Checkbox Group\">\r\n              <CheckboxGroup displayMode={mode} onSelect={(value) => setCheckboxGroupValue(value)}>\r\n                <Checkbox value={1}>One</Checkbox>\r\n                <Checkbox value={2}>Two</Checkbox>\r\n              </CheckboxGroup>\r\n              <Code>{JSON.stringify(checkboxGroupValue)}</Code>\r\n            </Box>\r\n            <Box title=\"Checkbox\">\r\n              <Checkbox value={3} displayMode={mode} onSelect={(value) => setCheckboxValue(value)}>Awesome</Checkbox>\r\n              <Code>{JSON.stringify(checkboxValue)}</Code>\r\n            </Box>\r\n            <Box title=\"Radio Group\">\r\n              <RadioGroup displayMode={mode} onSelect={(value) => setRadioGroupValue(value)}>\r\n                <Radio value={1}>One</Radio>\r\n                <Radio value={2}>Two</Radio>\r\n                <Radio value={3}>Three</Radio>\r\n              </RadioGroup>\r\n              <Code>{JSON.stringify(radioGroupValue)}</Code>\r\n            </Box>\r\n            <Box title=\"Button Group\">\r\n              <ButtonGroup displayMode={mode} onSelect={(value) => setButtonGroupValue(value)}>\r\n                <Button value={1}>One</Button>\r\n                <Button value={2}>Two</Button>\r\n                <Button value={3}>Three</Button>\r\n              </ButtonGroup>\r\n              <Code>{JSON.stringify(buttonGroupValue)}</Code>\r\n            </Box>\r\n            <Box title=\"Button\">\r\n              <div>\r\n              <Button size=\"small\"displayMode={mode} demo onClick={() => setButtonValue(\"Clicked One\")}>One</Button>\r\n              <Button size=\"medium\"displayMode={mode} demo onClick={() => setButtonValue(\"Clicked One\")}>One</Button>\r\n              <Button size=\"large\"displayMode={mode} demo onClick={() => setButtonValue(\"Clicked One\")}>One</Button>\r\n              <Button displayMode={mode} demo type=\"outline\" onClick={() => setButtonValue(\"Clicked Two\")}>Two</Button>\r\n              <Button displayMode={mode} demo type=\"text\" onClick={() => setButtonValue(\"Clicked Three\")}>Three</Button>\r\n              </div>\r\n              <Code>{JSON.stringify(buttonValue)}</Code>\r\n            </Box>\r\n            \r\n\r\n\r\n          </Container>\r\n        </Container>\r\n        \r\n      </ThemeProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Quanh;\r\n","C:\\Dev\\High Noon\\client\\src\\components\\icons\\IcoCheck.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\icons\\IcoCheckCircle.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\icons\\IcoCheckSquare.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\Box.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\Code.js",[],"C:\\Dev\\High Noon\\client\\src\\Dat.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\icons\\IcoChevronDown.js",[],"C:\\Dev\\High Noon\\client\\src\\components\\elements\\Option.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":17},{"ruleId":"148","severity":1,"message":"152","line":3,"column":9,"nodeType":"150","messageId":"151","endLine":3,"endColumn":15},{"ruleId":"148","severity":1,"message":"153","line":3,"column":17,"nodeType":"150","messageId":"151","endLine":3,"endColumn":28},{"ruleId":"148","severity":1,"message":"154","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":11},{"ruleId":"144","replacedBy":"155"},{"ruleId":"146","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":27,"column":8,"nodeType":"159","endLine":27,"endColumn":10,"suggestions":"160"},{"ruleId":"148","severity":1,"message":"161","line":1,"column":16,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"162","line":45,"column":12,"nodeType":"150","messageId":"151","endLine":45,"endColumn":17},{"ruleId":"148","severity":1,"message":"163","line":45,"column":19,"nodeType":"150","messageId":"151","endLine":45,"endColumn":27},{"ruleId":"144","replacedBy":"164"},{"ruleId":"146","replacedBy":"165"},{"ruleId":"148","severity":1,"message":"166","line":35,"column":23,"nodeType":"150","messageId":"151","endLine":35,"endColumn":35},{"ruleId":"148","severity":1,"message":"167","line":15,"column":10,"nodeType":"150","messageId":"151","endLine":15,"endColumn":26},{"ruleId":"148","severity":1,"message":"168","line":15,"column":28,"nodeType":"150","messageId":"151","endLine":15,"endColumn":47},{"ruleId":"148","severity":1,"message":"169","line":16,"column":10,"nodeType":"150","messageId":"151","endLine":16,"endColumn":21},{"ruleId":"148","severity":1,"message":"170","line":16,"column":23,"nodeType":"150","messageId":"151","endLine":16,"endColumn":37},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'Dat' is defined but never used.",["171"],["172"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["173"],"'useEffect' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.",["171"],["172"],"'setStartDate' is assigned a value but never used.","'buttonGroupValue' is assigned a value but never used.","'setButtonGroupValue' is assigned a value but never used.","'buttonValue' is assigned a value but never used.","'setButtonValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},"Update the dependencies array to be: [props]",{"range":"176","text":"177"},[900,902],"[props]"]